name: Build Maven project, run tests, and push Docker images - DEVELOP

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
  workflow_dispatch:

jobs:

  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: develop

      - name: Ensure target directory exists
        run: mkdir -p target

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build Maven Project
        run: mvn package

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Spring Docker Image
        run: |
          docker build -t halfgui/todolist-spring:develop -f ./Dockerfile .
          docker push halfgui/todolist-spring:develop

      - name: Build and Push Nginx Docker Image
        run: |
          docker build -t halfgui/todolist-nginx:develop -f ./Dockerfile-nginx .
          docker push halfgui/todolist-nginx:develop
  deploy:
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: develop

      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Copy Docker Compose files to EC2 instance
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ./src/main/resources/docker/docker-compose.dev.yaml
          target: ./

      - name: SSH into EC2 instance and run Docker Compose
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "cd ./src/main/resources/docker && docker-compose pull && docker-compose -f docker-compose.dev.yaml up -d"
          rm -rf private_key.pem
